{"version":3,"sources":["../../../projects/ngx-long-click/src/lib/long-click.directive.ts","../../../projects/ngx-long-click/src/lib/ngx-long-click.module.ts"],"names":["LongClickDirective","hostElement","this","clickDelayMs","longClick","EventEmitter","prototype","ngAfterViewInit","_this","mouseDown$","fromEvent","nativeElement","mouseUp$","touchStart$","touchEnd$","merge","pipe","delay","takeUntil","repeat","subscribe","val","emit","Directive","args","selector","ElementRef","Input","Output","NgModule","declarations","imports","exports"],"mappings":"8aAmBE,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,EATXC,KAAAC,aAAe,IACHD,KAAAE,UAAY,IAAIC,EAAAA,oBAUrCL,EAAAM,UAAAC,gBAAA,WAAA,IAAAC,EAAAN,KACEA,KAAKO,WAAaC,EAAAA,UAAUR,KAAKD,YAAYU,cAAe,aAC5DT,KAAKU,SAAWF,EAAAA,UAAUR,KAAKD,YAAYU,cAAe,WAC1DT,KAAKW,YAAcH,EAAAA,UAAUR,KAAKD,YAAYU,cAAe,cAC7DT,KAAKY,UAAYJ,EAAAA,UAAUR,KAAKD,YAAYU,cAAe,YAE3DI,EAAAA,MAAMb,KAAKO,WAAYP,KAAKW,aAAaG,KAGvCC,EAAAA,MAAMf,KAAKC,cACXe,EAAAA,UAAUH,EAAAA,MAAMb,KAAKU,SAAUV,KAAKY,YACpCK,EAAAA,UAGAC,WAAU,SAAAC,GAAO,OAAAb,EAAKJ,UAAUkB,KAAKD,gCA/B1CE,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,2DANsBC,EAAAA,oDAU/BC,EAAAA,yBACAC,EAAAA,OAAMJ,KAAA,CAAC,sBCAV,iCANCK,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAAC9B,GACf+B,QAAS,GAETC,QAAS,CAAChC","sourcesContent":["import {AfterViewInit, Directive, ElementRef, EventEmitter, Input, Output} from '@angular/core';\nimport {fromEvent, merge, Observable} from 'rxjs';\nimport {delay, repeat, takeUntil, tap} from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[longClick]'\n})\nexport class LongClickDirective implements AfterViewInit{\n\n  @Input() clickDelayMs = 500;\n  @Output('longClick') longClick = new EventEmitter<MouseEvent | TouchEvent>();\n\n  mouseDown$: Observable<any>;\n  mouseUp$: Observable<any>;\n\n  touchStart$: Observable<any>;\n  touchEnd$: Observable<any>;\n\n  constructor(private hostElement: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    this.mouseDown$ = fromEvent(this.hostElement.nativeElement, 'mousedown');\n    this.mouseUp$ = fromEvent(this.hostElement.nativeElement, 'mouseup');\n    this.touchStart$ = fromEvent(this.hostElement.nativeElement, 'touchstart');\n    this.touchEnd$ = fromEvent(this.hostElement.nativeElement, 'touchend');\n\n    merge(this.mouseDown$, this.touchStart$).pipe(\n      // tap(() => console.log('DOWN')),\n      // tap((val) => console.log(val)),\n      delay(this.clickDelayMs),\n      takeUntil(merge(this.mouseUp$, this.touchEnd$)),\n      repeat(),\n      // tap((val) => console.log(val)),\n      // tap(() => console.log('long click')),\n    ).subscribe(val => this.longClick.emit(val));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {LongClickDirective} from './long-click.directive';\n\n\n\n@NgModule({\n  declarations: [LongClickDirective],\n  imports: [\n  ],\n  exports: [LongClickDirective]\n})\nexport class NgxLongClickModule { }\n"]}